[info]
logo              = https://nightly.collectionspace.org/collectionspace/ui/core/images/header-logo.png
schemacolor1      = #008CCC
serverlabel       = production
serverlabelcolor  = red
institution       = core
apptitle          = Upload Media
updatetype        = uploadmedia
updateactionlabel = Upload Media

# this is the path to the directory where the code, etc. for the 'batch component' is.
# that is, where postblob.sh runs.
# these parameter are used by the 'upload NOW' functionality, which needs to know
# how to run the batch script.
postblobpath      = /var/www/core/uploadmedia
# name of .cfg file
batchparameters   = nightly_Uploadmedia_Dev.cfg

# set to true if you want to display the "override" blocks, etc.
# (you'll want to set some of the other options as well if you do: creators, rightsholders, etc.
usebmuoptions     = True

# set the following to True to display the "override block" (in which case set creators and rightsholders too)
allowintervention = True
# set the following to True to allow Media records to be created even if the corresponding objects are not found
alwayscreatemedia = True

# the following values need to be carefully constructed JSON objects

# must be a list of lists
bmuoptions        = [
                    ["Upload as slide (insert slide static metadata)", "slide"],
                    ["Create media record only (do not link to accessions)", "mediaonly"],
                    ["Create media record and link to accession (image filename must contain accession number)", "media+accession"]
                    ]

# if you're going to use bmuoptions, you'll probably want to set a few of these.
bmuconstants        = {
                    "slide": {
                    "imagetype": "Slide (Photograph)",
                    "copyright": "Material may be protected by copyright (Title 17, U.S. Code).",
                    "contributor": "refname of contributer"
                     },
                    "mediaonly": {
                    "imagetype": "",
                    "copyright": "",
                    "contributor": ""
                    },
                    "media+accession" : {
                    "imagetype": "",
                    "copyright": "",
                    "contributor": ""
                    }
                   }

# must be a list of lists
creators          = [
                ["John Creator", "urn:cspace:nightly.collectionspace.org:personauthorities:name(person):item:name(john999)'John Creator'"],
                ["Ivan Photographer", "urn:cspace:nightly.collectionspace.org:personauthorities:name(person):item:name(ivan888)'Ivan Photographer'"],
                ["Jane Doe", "urn:cspace:nightly.collectionspace.org:personauthorities:name(person):item:name(9999)'Jane L. Doe'"]
                ]

# must be a list of lists
rightsholders    = [
                ["Phoebe A. Hearst Museum of Anthropology", "urn:cspace:nightly.collectionspace.org:orgauthorities:name(organization):item:name(8107)'Phoebe A. Hearst Museum of Anthropology'"],
                ["University of California at Berkeley Regents", "urn:cspace:nightly.collectionspace.org:orgauthorities:name(organization):item:name(6390)'University of California at Berkeley Regents'"]
                ]

# must be a list of lists
overrides        = [
                    ["Creator","dropdown","creator",""],
                    ["Rights Holder","dropdown","rightsholder",""],
                    ["Source","text","source",""]
                    ]

[connect]
# direct postgres connections are not made by this webapp at this time
# connect_string    = host=dba-postgres-prod-32.ist.berkeley.edu port=5307 dbname=core_domain_core user=reporter_core sslmode=prefer
# nor are http calls to services.
protocol          = https
port              = 
realm             = org.collectionspace.services
hostname          = nightly.collectionspace.org

[files]
directory         = /tmp/image_upload_cache_core
